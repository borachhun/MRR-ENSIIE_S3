l
class(l)
class(l[[1]])
rmse_bats_linear <- c()
rmse_bats_forward <- c()
rmse_bats_ridge <- c()
rmse_bats_lasso <- c()
rmse_bats_elastic_net <- c()
r_squared_bats_linear <- c()
r_squared_bats_forward <- c()
r_squared_bats_ridge <- c()
r_squared_bats_lasso <- c()
r_squared_bats_elastic_net <- c()
model_bats_linear <- list()
model_bats_forward <- list()
model_bats_ridge <- list()
model_bats_lasso <- list()
model_bats_elastic_net <- list()
# loop for CHL 2-18
for (i in 1:17) {
# 7:23 = CHL 2-18
train_data_CHLi <- bats_train_data[, -(c(7:23)[-i])]
test_data_CHLi <- bats_test_data[, -(c(7:23)[-i])]
# 7 = always target CHL i
CHLi_sample <- 10^test_data_CHLi[, 7]
# === LINEAR ===
formula <- as.formula(paste("`CHL ", i+1, "` ~ .", sep=""))
reg_linear <- lm(formula, data=train_data_CHLi)
model_bats_linear <- append(model_bats_linear, list(reg_linear))
linear_predict <- 10^predict(reg_linear, newdata=test_data_CHLi)
rmse_bats_linear <- c(rmse_bats_linear, sqrt(sum((CHLi_sample - linear_predict)^2) / length(CHLi_sample)))
r_squared_bats_linear <- c(r_squared_bats_linear, r_squared(CHLi_sample, linear_predict))
# === FORWARD ===
forward_formula <- as.formula(paste("`CHL ", i+1, "` ~ 1", sep=""))
reg_forward <- step(lm(forward_formula, data=train_data_CHLi), list(upper=reg_linear), direction="forward", trace=0)
model_bats_forward <- append(model_bats_forward, list(reg_forward))
forward_predict <- 10^predict(reg_forward, newdata=test_data_CHLi)
rmse_bats_forward <- c(rmse_bats_forward, sqrt(sum((CHLi_sample - forward_predict)^2) / length(CHLi_sample)))
r_squared_bats_forward <- c(r_squared_bats_forward, r_squared(CHLi_sample, forward_predict))
# === RIDGE ===
# remove CHL 2-18, 5days and year (7:25)
cv_ridge <- cv.glmnet(x=as.matrix(bats[, -(7:25)]), y=bats[,(6+i)], alpha=0)
# 7 = always target
reg_ridge <- glmnet(x=as.matrix(train_data_CHLi[,-7]), y=train_data_CHLi[,7], alpha=0, lambda=cv_ridge$lambda.min)
model_bats_ridge <- append(model_bats_ridge, list(reg_ridge))
ridge_predict <- 10^predict(reg_ridge, newx=as.matrix(test_data_CHLi[,-7]))
rmse_bats_ridge <- c(rmse_bats_ridge, sqrt(sum((CHLi_sample - ridge_predict)^2) / length(CHLi_sample)))
r_squared_bats_ridge <- c(r_squared_bats_ridge, r_squared(CHLi_sample, ridge_predict))
# === LASSO ===
# remove CHL 2-18, 5days and year (7:25)
cv_lasso <- cv.glmnet(x=as.matrix(bats[, -(7:25)]), y=bats[,(6+i)], alpha=1)
# 7 = always target
reg_lasso <- glmnet(x=as.matrix(train_data_CHLi[,-7]), y=train_data_CHLi[,7], alpha=1, lambda=cv_lasso$lambda.min)
model_bats_lasso <- append(model_bats_lasso, list(reg_lasso))
lasso_predict <- 10^predict(reg_lasso, newx=as.matrix(test_data_CHLi[,-7]))
rmse_bats_lasso <- c(rmse_bats_lasso, sqrt(sum((CHLi_sample - lasso_predict)^2) / length(CHLi_sample)))
r_squared_bats_lasso <- c(r_squared_bats_lasso, r_squared(CHLi_sample, lasso_predict))
# === ELASTIC NET ===
sub_rmse_elastic_net <- c()
sub_r_squared_elastic_net <- c()
all_elastic_net_models <- list()
for (a in 0:10) {
# remove CHL 2-18, 5days and year (7:25)
cv_elastic_net <- cv.glmnet(x=as.matrix(bats[, -(7:25)]), y=bats[,(6+i)], alpha=a/10)
# 7 = always target
reg_elastic_net <- glmnet(x=as.matrix(train_data_CHLi[,-7]), y=train_data_CHLi[,7], alpha=a/10, lambda=cv_elastic_net$lambda.min)
all_elastic_net_models <- append(all_elastic_net_models, list(reg_elastic_net))
elastic_net_predict <- 10^predict(reg_elastic_net, newx=as.matrix(test_data_CHLi[,-7]))
sub_rmse_elastic_net <- c(sub_rmse_elastic_net, sqrt(sum((CHLi_sample - elastic_net_predict)^2) / length(CHLi_sample)))
sub_r_squared_elastic_net <- c(sub_r_squared_elastic_net, r_squared(CHLi_sample, elastic_net_predict))
}
min_error_index <- which.min(sub_rmse_elastic_net)
model_bats_elastic_net <- append(model_bats_elastic_net, all_elastic_net_models[[min_error_index]])
rmse_bats_elastic_net <- c(rmse_bats_elastic_net, sub_rmse_elastic_net[min_error_index])
r_squared_bats_elastic_net <- c(r_squared_bats_elastic_net, sub_r_squared_elastic_net[min_error_index])
}
CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_linear), "linear bats")
# BATS predicted CHL 2-18
log_CHL_predict <- function(test_data, model_list) {
# 219 = 73 x 3 (3 years)
res <- rep(0, times=219)
# 7:23 = CHL 2-18
test_data <- test_data[, -c(7:23)]
for (i in 1:17) {
cbind(res, predict(model_list[[i]], test_data))
}
return(res[,-1])
}
CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_linear), "linear bats")
matrix(c(1,2,3,4), ncol=2)[,-1]
matrix(c(1,2,3,4,5,6), ncol=3)[,-1]
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_linear), "linear bats")
log_CHL_predict(bats_test_data[1:73,], model_bats_linear)
# BATS predicted CHL 2-18
log_CHL_predict <- function(test_data, model_list) {
# 219 = 73 x 3 (3 years)
res <- rep(0, times=219)
# 7:23 = CHL 2-18
test_data <- test_data[, -c(7:23)]
for (i in 1:17) {
cbind(res, predict(model_list[[i]], test_data))
}
#return(res[,-1])
return(res)
}
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_linear), "linear bats")
log_CHL_predict(bats_test_data[1:73,], model_bats_linear)
length(model_bats_linear)
length(model_bats_forward)
length(model_bats_ridge)
length(model_bats_lasso)
length(model_bats_elastic_net)
predict(model_bats_linear[[1]], bats_test_data[1:73,])
model_bats_linear[[2]]
model_bats_ridge[[2]]
glmnet(x=as.matrix(iris[1:10,1:3]), y=iris[1:10,4], alpha=1, lambda=0.5)
typeof(glmnet(x=as.matrix(iris[1:10,1:3]), y=iris[1:10,4], alpha=1, lambda=0.5))
predict(model_bats_ridge[[1]], train_data_CHLi)
predict(model_bats_ridge[[1]], train_data_CHLi[,-7])
predict(model_bats_ridge[[1]], as.matrix(train_data_CHLi[,-7]))
rmse_bats_linear <- c()
rmse_bats_forward <- c()
rmse_bats_ridge <- c()
rmse_bats_lasso <- c()
rmse_bats_elastic_net <- c()
r_squared_bats_linear <- c()
r_squared_bats_forward <- c()
r_squared_bats_ridge <- c()
r_squared_bats_lasso <- c()
r_squared_bats_elastic_net <- c()
model_bats_linear <- list()
model_bats_forward <- list()
model_bats_ridge <- list()
model_bats_lasso <- list()
model_bats_elastic_net <- list()
# loop for CHL 2-18
for (i in 1:17) {
# 7:23 = CHL 2-18
train_data_CHLi <- bats_train_data[, -(c(7:23)[-i])]
test_data_CHLi <- bats_test_data[, -(c(7:23)[-i])]
# 7 = always target CHL i
CHLi_sample <- 10^test_data_CHLi[, 7]
# === LINEAR ===
formula <- as.formula(paste("`CHL ", i+1, "` ~ .", sep=""))
reg_linear <- lm(formula, data=train_data_CHLi)
model_bats_linear <- append(model_bats_linear, list(reg_linear))
linear_predict <- 10^predict(reg_linear, newdata=test_data_CHLi)
rmse_bats_linear <- c(rmse_bats_linear, sqrt(sum((CHLi_sample - linear_predict)^2) / length(CHLi_sample)))
r_squared_bats_linear <- c(r_squared_bats_linear, r_squared(CHLi_sample, linear_predict))
# === FORWARD ===
forward_formula <- as.formula(paste("`CHL ", i+1, "` ~ 1", sep=""))
reg_forward <- step(lm(forward_formula, data=train_data_CHLi), list(upper=reg_linear), direction="forward", trace=0)
model_bats_forward <- append(model_bats_forward, list(reg_forward))
forward_predict <- 10^predict(reg_forward, newdata=test_data_CHLi)
rmse_bats_forward <- c(rmse_bats_forward, sqrt(sum((CHLi_sample - forward_predict)^2) / length(CHLi_sample)))
r_squared_bats_forward <- c(r_squared_bats_forward, r_squared(CHLi_sample, forward_predict))
# === RIDGE ===
# remove CHL 2-18, 5days and year (7:25)
cv_ridge <- cv.glmnet(x=as.matrix(bats[, -(7:25)]), y=bats[,(6+i)], alpha=0)
# 7 = always target
reg_ridge <- glmnet(x=as.matrix(train_data_CHLi[,-7]), y=train_data_CHLi[,7], alpha=0, lambda=cv_ridge$lambda.min)
model_bats_ridge <- append(model_bats_ridge, list(reg_ridge))
ridge_predict <- 10^predict(reg_ridge, newx=as.matrix(test_data_CHLi[,-7]))
rmse_bats_ridge <- c(rmse_bats_ridge, sqrt(sum((CHLi_sample - ridge_predict)^2) / length(CHLi_sample)))
r_squared_bats_ridge <- c(r_squared_bats_ridge, r_squared(CHLi_sample, ridge_predict))
# === LASSO ===
# remove CHL 2-18, 5days and year (7:25)
cv_lasso <- cv.glmnet(x=as.matrix(bats[, -(7:25)]), y=bats[,(6+i)], alpha=1)
# 7 = always target
reg_lasso <- glmnet(x=as.matrix(train_data_CHLi[,-7]), y=train_data_CHLi[,7], alpha=1, lambda=cv_lasso$lambda.min)
model_bats_lasso <- append(model_bats_lasso, list(reg_lasso))
lasso_predict <- 10^predict(reg_lasso, newx=as.matrix(test_data_CHLi[,-7]))
rmse_bats_lasso <- c(rmse_bats_lasso, sqrt(sum((CHLi_sample - lasso_predict)^2) / length(CHLi_sample)))
r_squared_bats_lasso <- c(r_squared_bats_lasso, r_squared(CHLi_sample, lasso_predict))
# === ELASTIC NET ===
sub_rmse_elastic_net <- c()
sub_r_squared_elastic_net <- c()
all_elastic_net_models <- list()
for (a in 0:10) {
# remove CHL 2-18, 5days and year (7:25)
cv_elastic_net <- cv.glmnet(x=as.matrix(bats[, -(7:25)]), y=bats[,(6+i)], alpha=a/10)
# 7 = always target
reg_elastic_net <- glmnet(x=as.matrix(train_data_CHLi[,-7]), y=train_data_CHLi[,7], alpha=a/10, lambda=cv_elastic_net$lambda.min)
all_elastic_net_models <- append(all_elastic_net_models, list(reg_elastic_net))
elastic_net_predict <- 10^predict(reg_elastic_net, newx=as.matrix(test_data_CHLi[,-7]))
sub_rmse_elastic_net <- c(sub_rmse_elastic_net, sqrt(sum((CHLi_sample - elastic_net_predict)^2) / length(CHLi_sample)))
sub_r_squared_elastic_net <- c(sub_r_squared_elastic_net, r_squared(CHLi_sample, elastic_net_predict))
}
min_error_index <- which.min(sub_rmse_elastic_net)
model_bats_elastic_net <- append(model_bats_elastic_net, list(all_elastic_net_models[[min_error_index]]))
rmse_bats_elastic_net <- c(rmse_bats_elastic_net, sub_rmse_elastic_net[min_error_index])
r_squared_bats_elastic_net <- c(r_squared_bats_elastic_net, sub_r_squared_elastic_net[min_error_index])
}
model_bats_elastic_net
length(model_bats_elastic_net)
# BATS predicted CHL 2-18
log_CHL_predict <- function(test_data, model_list) {
# 219 = 73 x 3 (3 years)
res <- rep(0, times=219)
# 7:23 = CHL 2-18
test_data <- test_data[, -c(7:23)]
for (i in 1:17) {
cbind(res, c(predict(model_list[[i]], test_data)))
}
#return(res[,-1])
return(res)
}
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_linear), "linear bats")
log_CHL_predict(bats_test_data[1:73,], model_bats_linear)
# BATS predicted CHL 2-18
log_CHL_predict <- function(test_data, model_list) {
# 219 = 73 x 3 (3 years)
res <- rep(0, times=219)
# 7:23 = CHL 2-18
test_data <- test_data[, -c(7:23)]
for (i in 1:17) {
res <- cbind(res, predict(model_list[[i]], test_data))
}
#return(res[,-1])
return(res)
}
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_linear), "linear bats")
log_CHL_predict(bats_test_data[1:73,], model_bats_linear)
# BATS predicted CHL 2-18
log_CHL_predict <- function(test_data, model_list) {
# 219 = 73 x 3 (3 years)
res <- rep(0, times=219)
# 7:23 = CHL 2-18
test_data <- test_data[, -c(7:23)]
for (i in 1:17) {
res <- cbind(res, predict(model_list[[i]], test_data))
}
return(res[,-1])
}
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_linear), "linear bats")
log_CHL_predict(bats_test_data[1:73,], model_bats_linear)
CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_linear), "linear bats")
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_linear), "linear bats")
dim(log_CHL_predict(bats_test_data[1:73,], model_bats_linear))
CHL_heat_map <- function(CHL_data, title) {
plot_data <- expand.grid(depth=2:18, `5days`=1:73)
plot_data$CHL <- c(sapply(1:nrow(CHL_data), function(row) as.numeric(CHL_data[row,])))
`5 days` <- plot_data$`5days`
`Depth level` <- plot_data$depth
`log10(CHL)` <- plot_data$CHL
return(ggplot(plot_data, aes(x=`5 days`, y=`Depth level`, fill=`log10(CHL)`)) + geom_tile() + scale_fill_gradientn(colors = rainbow(7), limits=c(-1.8,0.4), breaks=seq(-1.8,0.4,0.4)) + scale_y_reverse() + coord_fixed() + ggtitle(title))
}
CHL_heat_map <- function(CHL_data, title) {
plot_data <- expand.grid(depth=2:18, `5days`=1:73)
plot_data$CHL <- c(sapply(1:nrow(CHL_data), function(row) as.numeric(CHL_data[row,])))
`5 days` <- plot_data$`5days`
`Depth level` <- plot_data$depth
`log10(CHL)` <- plot_data$CHL
return(ggplot(plot_data, aes(x=`5 days`, y=`Depth level`, fill=`log10(CHL)`)) + geom_tile() + scale_fill_gradientn(colors = rainbow(7), limits=c(-1.8,0.4), breaks=seq(-1.8,0.4,0.4)) + scale_y_reverse() + coord_fixed() + ggtitle(title))
}
# BATS predicted CHL 2-18
log_CHL_predict <- function(test_data, model_list) {
# 219 = 73 x 3 (3 years)
res <- rep(0, times=219)
# 7:23 = CHL 2-18
test_data <- test_data[, -c(7:23)]
for (i in 1:17) {
res <- cbind(res, predict(model_list[[i]], test_data))
}
return(res[,-1])
}
CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_linear), "linear bats")
dim(expand.grid(depth=2:18, `5days`=1:73))
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_linear), "linear bats")
dim(log_CHL_predict(bats_test_data[1:73,], model_bats_linear))
# BATS predicted CHL 2-18
log_CHL_predict <- function(test_data, model_list) {
# 219 = 73 x 3 (3 years)
res <- rep(0, times=73)
# 7:23 = CHL 2-18
test_data <- test_data[, -c(7:23)]
for (i in 1:17) {
res <- cbind(res, predict(model_list[[i]], test_data))
}
return(res[,-1])
}
CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_linear), "linear bats")
#dim(log_CHL_predict(bats_test_data[1:73,], model_bats_linear))
CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_elastic_net), "linear bats")
# BATS predicted CHL 2-18
log_CHL_predict <- function(test_data, model_list) {
# 219 = 73 x 3 (3 years)
res <- rep(0, times=73)
# 7:23 = CHL 2-18
test_data <- test_data[, -c(7:23)]
for (i in 1:17) {
res <- cbind(res, predict(model_list[[i]], as.matrix(test_data)))
}
return(res[,-1])
}
CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_elastic_net), "linear bats")
#dim(log_CHL_predict(bats_test_data[1:73,], model_bats_linear))
CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_elastic_net), "linear bats")
CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#dim(log_CHL_predict(bats_test_data[1:73,], model_bats_linear))
bats_test_data
bats[bats$year %in% subset_year[[4]]]
bats[bats$year %in% subset_year[[4]],]
?sort
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#dim(log_CHL_predict(bats_test_data[1:73,], model_bats_linear))
bats[bats$year %in% subset_year[[4]], -c(24,25)]
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#dim(log_CHL_predict(bats_test_data[1:73,], model_bats_linear))
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
bats[bats$year %in% subset_year[[4]],]
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#dim(log_CHL_predict(bats_test_data[1:73,], model_bats_linear))
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
bats[bats$year %in% order(subset_year[[4]]),]
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#dim(log_CHL_predict(bats_test_data[1:73,], model_bats_linear))
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- bats[order(year)]
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#dim(log_CHL_predict(bats_test_data[1:73,], model_bats_linear))
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- bats[order(year),]
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#dim(log_CHL_predict(bats_test_data[1:73,], model_bats_linear))
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- bats[order(tmp$year),]
tmp
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#dim(log_CHL_predict(bats_test_data[1:73,], model_bats_linear))
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- bats[order(tmp$year, tmp$5days),]
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#dim(log_CHL_predict(bats_test_data[1:73,], model_bats_linear))
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- bats[order(tmp$year, tmp$`5days`),]
tmp
subset_year
subset_year[[4]]
1992 %in% subset_year[[4]]
1993 %in% subset_year[[4]]
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#dim(log_CHL_predict(bats_test_data[1:73,], model_bats_linear))
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
#tmp <- bats[order(tmp$year, tmp$`5days`),]
tmp
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#dim(log_CHL_predict(bats_test_data[1:73,], model_bats_linear))
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year, tmp$`5days`),]
tmp
#CHL_heat_map(log_CHL_predict(bats_test_data[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#dim(log_CHL_predict(bats_test_data[1:73,], model_bats_linear))
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year),]
tmp
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_elastic_net), "linear bats")
CHL_heat_map(log_CHL_predict(tmp[1:73,-(7:23)], model_bats_elastic_net), "linear bats")
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
#CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(log_CHL_predict(tmp[1:73,-(7:23)], model_bats_elastic_net), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
colnames(tmp)
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_elastic_net), "linear bats")
CHL_heat_map(log_CHL_predict(tmp[1:73,-c(7:23)], model_bats_elastic_net), "linear bats")
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
#CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(log_CHL_predict(tmp[1:73,-c(7:23)], model_bats_elastic_net), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
colnames(tmp[,-(7:23)])
predict(model_list[[i]], as.matrix(tmp))
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
#CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_elastic_net), "linear bats")
CHL_heat_map(log_CHL_predict(tmp[1:73,-(7:23)], model_bats_elastic_net), "linear bats")
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
#CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_elastic_net), "linear bats")
CHL_heat_map(log_CHL_predict(tmp[1:73,-(7:23)], model_bats_linear), "linear bats")
# BATS predicted CHL 2-18
log_CHL_predict <- function(test_data, model_list) {
# 219 = 73 x 3 (3 years)
res <- rep(0, times=73)
# 7:23 = CHL 2-18
test_data <- test_data[, -c(7:23)]
for (i in 1:17) {
#res <- cbind(res, predict(model_list[[i]], as.matrix(test_data)))
res <- cbind(res, predict(model_list[[i]], test_data))
}
return(res[,-1])
}
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
#CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_elastic_net), "linear bats")
CHL_heat_map(log_CHL_predict(tmp[1:73,-(7:23)], model_bats_linear), "linear bats")
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
tmp
#CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(log_CHL_predict(tmp[1:73,-(7:23)], model_bats_linear), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#colnames(tmp[,-(7:23)])
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
tmp[,-(7:23)]
#CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(log_CHL_predict(tmp[1:73,-(7:23)], model_bats_linear), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#colnames(tmp[,-(7:23)])
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
tmp[1:73,-(7:23)]
#CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_elastic_net), "linear bats")
#CHL_heat_map(log_CHL_predict(tmp[1:73,-(7:23)], model_bats_linear), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#colnames(tmp[,-(7:23)])
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_elastic_net), "linear bats")
# BATS predicted CHL 2-18
log_CHL_predict <- function(test_data, model_list) {
# 219 = 73 x 3 (3 years)
res <- rep(0, times=73)
# 7:23 = CHL 2-18
test_data <- test_data[, -c(7:23)]
for (i in 1:17) {
#res <- cbind(res, predict(model_list[[i]], as.matrix(test_data)))
res <- cbind(res, predict(model_list[[i]], test_data))
}
return(res[,-1])
}
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_elastic_net), "linear bats")
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_linear), "linear bats")
#CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#colnames(tmp[,-(7:23)])
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_linear), "linear bats")
CHL_heat_map(bats_test_data[1:73,7:23], "linear bats")
#colnames(tmp[,-(7:23)])
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_linear), "linear bats")
CHL_heat_map(tmp[1:73,7:23], "linear bats")
#colnames(tmp[,-(7:23)])
# BATS predicted CHL 2-18
log_CHL_predict <- function(test_data, model_list) {
# 219 = 73 x 3 (3 years)
res <- rep(0, times=73)
# 7:23 = CHL 2-18
test_data <- test_data[, -c(7:23)]
for (i in 1:17) {
res <- cbind(res, predict(model_list[[i]], as.matrix(test_data)))
#res <- cbind(res, predict(model_list[[i]], test_data))
}
return(res[,-1])
}
#bats[bats$year %in% subset_year[[4]], -c(24,25)]
tmp <- bats[bats$year %in% subset_year[[4]],]
tmp <- tmp[order(tmp$year), -c(24,25)]
CHL_heat_map(log_CHL_predict(tmp[1:73,], model_bats_elastic_net), "linear bats")
CHL_heat_map(tmp[1:73,7:23], "linear bats")
#colnames(tmp[,-(7:23)])
